name: e2e-ios

on: pull_request

env:
  NO_FLIPPER: 1

jobs:
  e2e:
    runs-on: macos-12

    strategy:
      fail-fast: false
      matrix:
        attempt: [1, 2]

    steps:
      - name: Echo attempt
        run: echo ${{ matrix.attempt }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Setup Docker on macOS attempt 1
        id: docker1
        continue-on-error: true
        uses: docker-practice/actions-setup-docker@1.0.11
        timeout-minutes: 30

      - name: Setup Docker on macOS attempt 2
        if: steps.docker1.outcome != 'success'
        uses: docker-practice/actions-setup-docker@1.0.11
        timeout-minutes: 30

      - name: Run regtest setup
        run: cd __tests__ && docker-compose up -d

      - name: Wait for bitcoind
        timeout-minutes: 2
        run: while ! nc -z '127.0.0.1' 43782; do sleep 1; done

      - name: Wait for electrum server
        timeout-minutes: 2
        run: while ! nc -z '127.0.0.1' 60001; do sleep 1; done

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.TEST_USER_SSH_KEY }}
          known_hosts: ${{ secrets.TEST_USER_KNOWN_HOSTS }}

      - name: Use NPM Token with organization read access
        uses: dkershner6/use-npm-token-action@v1
        with:
          token: '${{ secrets.NPMJS_READ }}'

      - name: Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn' # cache packages, but not node_modules

      - name: Activate enviroment variables
        run: cp .env.test.template .env

      - name: Activate react-native-skia-stub
        run: patch -p1 < .github/workflows/react-native-skia-stub.patch

      - name: Cache Pods
        uses: actions/cache@v3
        id: podcache
        with:
          path: ios/Pods
          key: pods-${{ hashFiles('**/Podfile.lock') }}

      # Detox is compiled during yarn install, using Xcode, set up cache first
      - uses: hendrikmuhs/ccache-action@v1.2
        name: Xcode Compile Cache
        with:
          key: ccache-${{ runner.os }}
          max-size: 1500M

      - name: Yarn Install
        run: yarn --no-audit --prefer-offline

      - name: Install applesimutils
        run: HOMEBREW_NO_AUTO_UPDATE=1 brew tap wix/brew && brew install applesimutils

      - name: Build iOS App
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          export CCACHE_SLOPPINESS=clang_index_store,file_stat_matches,include_file_ctime,include_file_mtime,ivfsoverlay,pch_defines,modules,system_headers,time_macros
          export CCACHE_FILECLONE=true
          export CCACHE_DEPEND=true
          export CCACHE_INODECACHE=true
          export CCACHE_LIMIT_MULTIPLE=0.95
          ccache -s
          export SKIP_BUNDLING=1
          export RCT_NO_LAUNCH_PACKAGER=1
          set -o pipefail
          yarn e2e:build:ios-release
          ccache -s
        shell: bash

      - name: Create Simulator Log
        # With a little delay so the detox test below has time to spawn it, missing the first part of boot is fine
        # If you boot the simulator separately from detox, some other race fails and detox testee never sends ready to proxy
        continue-on-error: true
        run: nohup sh -c "sleep 30 && xcrun simctl spawn booted log stream --level debug --style compact > simulator.log 2>&1 &"

      - name: Test attempt 1
        continue-on-error: true
        id: test1
        run: yarn e2e:test:ios-release --record-videos all --take-screenshots all --record-logs all

      - name: Test attempt 2
        continue-on-error: true
        id: test2
        if: steps.test1.outcome != 'success'
        run: yarn e2e:test:ios-release --record-videos all --take-screenshots all --record-logs all

      - name: Test attempt 3
        id: test3
        if: steps.test2.outcome != 'success'
        run: yarn e2e:test:ios-release --record-videos all --take-screenshots all --record-logs all

      - name: Compress Simulator Log
        if: always()
        run: gzip -9 simulator.log

      - name: Upload Simulator Log
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: simulator_log
          path: simulator.log.gz

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: e2e-test-videos
          path: ./artifacts/

      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2
